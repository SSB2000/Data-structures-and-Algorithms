50. Pow(x, n)


Implement pow(x, n), which calculates x raised to the power n (i.e., xn).



Cpp

double myPow(double x, int n) {
	// return pow(x, n);
	
	// Binary Exponentiation
	// Reference : https://cp-algorithms.com/algebra/binary-exp.html

	// Iterative approach
	
	double res = 1;
	bool isExpNegative = (n < 0) ? true : false;
	n = abs(n);
	while (n > 0) {
		if (n & 1) {
			res *= x;
		}
		x *= x;
		n >>= 1;
	}
	if (isExpNegative) return 1/res;
	return res;
	
	// Recursion
	/*
	if (n == 0) return 1;
	bool isExpNegative = false;
	if (n < 0) isExpNegative = true;
	n = abs(n);
	double temp = myPow(x, n/2);
	if (n % 2 == 0) {
		if (!isExpNegative) return temp * temp;
		else return 1/(temp * temp);
	}
	else {
		if (!isExpNegative) return temp * temp * x;
		else return 1/(temp * temp * x);
	}
	*/

}