206. Reverse Linked List

Given the head of a singly linked list, reverse the list, and return the reversed list.


Cpp solution

ListNode* reverseList(ListNode* head) 
	// Iterative
	/*
	{
		if(head == NULL)
			return head;
		ListNode* p1 = NULL;
		ListNode* p2 = head;
		ListNode* p3;
		while(p2 != NULL)
		{
			p3 = p2->next;
			p2->next = p1;
			p1 = p2;
			p2 = p3;
		}
		
		return p1;
	}
	*/
	
	// Recursive method
	{
		if (head == NULL || head->next == NULL) return head;
		ListNode* p = reverseList(head->next);
		head->next->next = head;
		head->next = NULL;
		return p;
	}


JavaScript solution

var reverseList = function(head) {
    // Recursion
    if (head === null || head.next === null) return head;
    const p = reverseList(head.next);
    head.next.next = head;
    head.next = null;
    return p;
};